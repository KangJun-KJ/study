<template>
    <div class='cascader' on-click="toggleClick">
        <input class='input' value="{{= value =}}" placeholder="{{placeholder   }}" readonly="readonly"/>
        <i class="down {{open?'active':''}}"></i>
        <div s-if="open" s-transition="hook('slide-in-top')" class='cascader-menu'>
            <s-menu  on-change="change"
                options="{{ options }}"
                num="{{ num }}"
            >
            </s-menu>
        </div>
    </div>
</template>

<script>
    import menu from '@/components/task3_1_menu'
    import {transition} from 'san-transition'
    export default {
        components:{
            "s-menu":menu
        },
        initData () {
            return {
                open:false,
                value:"",
                num:[] 
            };
        },
        attached(){
           
        },
        toggleClick(){
            this.data.set("open",!this.data.get("open"));
        },
        getText(num){
            var data=this.data.get("options");
            var str="";
            for(var i=0,len=num.length;i<len;i++){
                str+=data[num[i]].label;
                data=data[num[i]].children;
                if(i!=len-1)
                    str+="/";
            }
            return str;
        },
        change(num){
            this.toggleClick();
            this.data.set("num",num);
            this.data.set("value",this.getText(num));
            this.fire("change");
        },
        hook: transition
    }   
</script>

<style lang='sass' scoped>
   .cascader{
        width: 222px;
        margin:30px 100px;
        display: inline-block;
        position: relative;
        font-size: 14px;
        line-height: 40px;
        height:40px;
        border-radius:3px;
        transition: border-color .2s cubic-bezier(.645,.045,.355,1);
        .input{
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            padding: 0 25px 0 15px;
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
            cursor: pointer;
            text-align: left;
            font-size: inherit;
            box-sizing: border-box;
            color: #606266;
            border: 1px solid #dcdfe6;
            transition:border-color .3s ease;
            &:focus{
                outline: none;
                border-color: #409eff;
            }
        }
        .down{
            position:absolute;
            top:13px;
            right:6px;
            width:15px;
            height:15px;
            cursor:pointer;
            background:url(./../assets/arrow.png) no-repeat center;
            pointer-events:none;
            transition:transform .3s ease-in;
        }
        .active{
            transform:rotate(-180deg);
        }
        .cascader-menu{
            line-height:0;
        }
   }
    .slide-in-top-enter,.slide-in-top-leave{transition:all .5s ;transform-origin:bottom center;}
    .slide-in-top-before-enter,.slide-in-top-leave{transform:scaleY(0);opacity:0}
    .slide-in-top-before-leave,.slide-in-top-enter{opacity:1}
</style>